stages:
  - test
  - integration
  - build

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_TLS_VERIFY: 1
  DOCKER_CERT_PATH: "$DOCKER_TLS_CERTDIR/client"

lint:
  stage: test
  image: golangci/golangci-lint:v1.41
  script:
    - golangci-lint run -v

test:
  stage: test
  image: golang:1.16-alpine
  services:
    - name: docker:19.03.13-dind
      alias: localhost
  variables:
    DB_HOST: docker
    DB_PORT: "5433"
  script:
    - apk add --no-cache docker docker-compose git make musl-dev gcc
    - until docker info; do echo "Waiting for docker..."; sleep 1; done
    - go version
    - go test -v -p 1 ./...

build:
  stage: build
  image: docker:stable
  only:
    - master
    - develop
    - tags
  services:
    - docker:19.03.13-dind
  before_script:
    - |
      for i in $(seq 1 30)
      do
          docker info && break
          echo "Waiting for docker to start"
          sleep 1s
      done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA --tag $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
